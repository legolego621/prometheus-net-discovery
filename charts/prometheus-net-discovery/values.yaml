# Default values for prometheus-net-discovery.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: londinzer/prometheus-net-discovery
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532
  runAsGroup: 65532
  capabilities:
    drop:
      - ALL
  seccompProfile:
    type: RuntimeDefault

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8088

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}


## Listen address of the metrics HTTP server
listenAddr: :8088
## Log level
logLevel: info

config:
  ## Global config
  global:
    ## instance id of prometheus-net-discovery. Additional label to identify prometheus-net-discovery.
    instanceId: "{{ .Release.Name }}"
  ## Scanners config
  scanners: []
    # ## Network name (required)
    # - network: net-example
    #   ## Interval of discovery. It means how often to scan network.
    #   interval: 30m
    #   ## Deep scan of network - full scan all hosts in network (offline and online).
    #   ## It consumes more time, but it can find more hosts (if icmp is disabled on host).
    #   deep: true
    #   ## Concurrency of discovery. It means how many hosts to scan in parallel.
    #   ## Cuncurrency uses more resources, reduces time of discovery.
    #   ## for disable concurrency - set it to 0.
    #   concurrency: 10
    #   ## Targets of network (required)
    #   ## support CIDR and single IP and range of IP
    #   ## - 192.168.30.0/29
    #   ## - 192.168.30.1
    #   ## - 192.168.30.1-5
    #   targets:
    #     - 192.168.30.0/29
    #   ## Allow ICMP ping discovery (optional)
    #   ping: true
    #   ## Discovery ports (optional)
    #   ## support single port and range of ports (now only tcp)
    #   ## - 1-1024
    #   ## - 135-139
    #   ## - 445
    #   ports:
    #     - 1-1024,135-139,445,1433-1434,3306,3389,5000-5100,5432,5900-5910,6379,8000-8100,8443,27017
prometheus:
  monitor:
    enabled: false
    namespace: ""
    namespaceSelector: {}
    labels: {}
    targetLabels: []
    relabelings: []
    metricRelabelings: []
    jobLabel: ""
    scrapeInterval: 30s
